from future import utils
if utils.PY2:
    from io import open
    from future_builtins import ascii, oct, hex
    from __builtin__ import unichr as chr, pow as _builtin_pow
    import __builtin__
    isinstance = __builtin__.isinstance
    input = raw_input
    from future.builtins.newnext import newnext as next
    from future.builtins.newround import newround as round
    from future.builtins.newsuper import newsuper as super
    from future.builtins.new_min_max import newmax as max
    from future.builtins.new_min_max import newmin as min
    from future.types.newint import newint
    _SENTINEL = object()

    def pow(x, y, z=_SENTINEL):
        if isinstance(x, newint):
            x = long(x)
        if isinstance(y, newint):
            y = long(y)
        if isinstance(z, newint):
            z = long(z)
        try:
            if z == _SENTINEL:
                return _builtin_pow(x, y)
            else:
                return _builtin_pow(x, y, z)

        except ValueError:
            if z == _SENTINEL:
                return _builtin_pow(x + complex(0.0, 0.0), y)
            else:
                return _builtin_pow(x + complex(0.0, 0.0), y, z)


    __all__ = [
     'ascii', 'chr', 'hex', 'input', 'isinstance', 'next', 'oct',
     'open', 'pow', 'round', 'super', 'max', 'min']
else:
    import builtins
    ascii = builtins.ascii
    chr = builtins.chr
    hex = builtins.hex
    input = builtins.input
    next = builtins.next
    isinstance = builtins.isinstance
    oct = builtins.oct
    open = builtins.open
    pow = builtins.pow
    round = builtins.round
    super = builtins.super
    if utils.PY34_PLUS:
        max = builtins.max
        min = builtins.min
        __all__ = []
    else:
        from future.builtins.new_min_max import newmax as max
        from future.builtins.new_min_max import newmin as min
        __all__ = [
         'min', 'max']