<?xml version="1.0" encoding="utf-8"?>
<root>
	<info>
		<name>soundNotifications</name>
		<isMacro>false</isMacro>
		<aspect>
			<compatibles>CLIENT</compatibles>
		</aspect>
		<blocks>
			<block>
				<class>Choice</class>
				<id>Choice_1</id>
				<params>
					<param>
						3
						<name>Output Count</name>
						<type>IntT</type>
					</param>
				</params>
				<slots/>
			</block>
			<block>
				<class>ContextEventCall</class>
				<id>ContextEventCall_1</id>
				<params>
					<param>
						SoundNotificationsContext
						<name>Context Name</name>
						<type>StringT</type>
					</param>
					<param>
						getEventInfoInt
						<name>Member Name</name>
						<type>StringT</type>
					</param>
				</params>
				<slots>
					<slot>
						<name>parameter</name>
						<const>\queue\</const>
					</slot>
				</slots>
			</block>
			<block>
				<class>ContextEventReceive</class>
				<id>ContextEventReceive_1</id>
				<params>
					<param>
						SoundNotificationsContext
						<name>Context Name</name>
						<type>StringT</type>
					</param>
					<param>
						onPlayQueueEvent
						<name>Member Name</name>
						<type>StringT</type>
					</param>
				</params>
				<slots>
					<slot>
						<name>active</name>
						<const>\true\</const>
					</slot>
				</slots>
			</block>
			<block>
				<class>Macro</class>
				<id>Macro_2</id>
				<params>
					<param>
						processQueueEvent
						<name>Macro Name</name>
						<type>StringT</type>
					</param>
				</params>
				<slots/>
			</block>
			<block>
				<class>Macro</class>
				<id>Macro_3</id>
				<params>
					<param>
						processQueueEvent
						<name>Macro Name</name>
						<type>StringT</type>
					</param>
				</params>
				<slots/>
			</block>
		</blocks>
		<connections>
			<connection>
				<from>ContextEventCall_1</from>
				<input>input</input>
				<to>Choice_1</to>
				<output>out</output>
			</connection>
			<connection>
				<from>ContextEventCall_1</from>
				<input>index</input>
				<to>Choice_1</to>
				<output>res</output>
			</connection>
			<connection>
				<from>ContextEventReceive_1</from>
				<input>in</input>
				<to>ContextEventCall_1</to>
				<output>out</output>
			</connection>
			<connection>
				<from>ContextEventReceive_1</from>
				<input>eventName</input>
				<to>ContextEventCall_1</to>
				<output>eventName</output>
			</connection>
			<connection>
				<from>Choice_1</from>
				<input>input</input>
				<to>Macro_2</to>
				<output>o1</output>
			</connection>
			<connection>
				<from>ContextEventReceive_1</from>
				<input>eventName</input>
				<to>Macro_2</to>
				<output>eventName</output>
			</connection>
			<connection>
				<from>Choice_1</from>
				<input>input</input>
				<to>Macro_3</to>
				<output>o2</output>
			</connection>
			<connection>
				<from>ContextEventReceive_1</from>
				<input>eventName</input>
				<to>Macro_3</to>
				<output>eventName</output>
			</connection>
		</connections>
		<macros>
			<macro>
				<name>processQueueEvent</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ListenLocalEvent</class>
						<id>ListenLocalEvent_1</id>
						<params>
							<param>
								playFirstSound
								<name>Event Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetFromArray</class>
						<id>GetFromArray_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>index</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>RemoveFromArrayByIndex</class>
						<id>RemoveFromArrayByIndex_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>index</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_4</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_5</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								queueNum
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_2</id>
						<params>
							<param>
								soundsToPlay
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IsArrayEmpty</class>
						<id>IsArrayEmpty_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_5</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_3</id>
						<params>
							<param>
								playingEvent
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_7</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_8</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SendLocalEvent</class>
						<id>SendLocalEvent_1</id>
						<buddy>ListenLocalEvent_1</buddy>
						<params>
							<param>
								ListenLocalEvent_1
								<name>Event Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_4</id>
						<params>
							<param>
								currentPriority
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_8</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_5</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SubtractInteger</class>
						<id>SubtractInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\20\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_9</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_2</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\3\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Or</class>
						<id>Or_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetSoundName</class>
						<id>GetSoundName_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_3</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\2\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>And</class>
						<id>And_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_5</id>
						<params>
							<param>
								playingSound
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\00000000.00000000.00000000.00000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_7</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_10</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_12</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_12</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>PlaySound</class>
						<id>PlaySound_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_6</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IsArrayEmpty</class>
						<id>IsArrayEmpty_2</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_11</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_9</id>
						<params>
							<param>
								tickDelta
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareFloats</class>
						<id>CompareFloats_2</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\0.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>And</class>
						<id>And_2</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Not</class>
						<id>Not_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_2</id>
						<params>
							<param>
								2
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_25</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_6</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SendLocalEvent</class>
						<id>SendLocalEvent_2</id>
						<buddy>ListenLocalEvent_1</buddy>
						<params>
							<param>
								ListenLocalEvent_1
								<name>Event Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_11</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareString</class>
						<id>CompareString_2</id>
						<params/>
						<slots>
							<slot>
								<name>no_case</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_26</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_27</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_9</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_6</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_28</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_29</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_31</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_3</id>
						<params>
							<param>
								3
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_10</id>
						<params>
							<param>
								priorityEventNames
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_33</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_4</id>
						<params>
							<param>
								setEventAdditionalOptions
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								2
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ArenaPeriod</class>
						<id>ArenaPeriod_1</id>
						<params>
							<param>
								Battle
								<name>Period</name>
								<type>EArenaPeriodT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_5</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\300\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>FloatToInt</class>
						<id>FloatToInt_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_13</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IsArrayEmpty</class>
						<id>IsArrayEmpty_3</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_7</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_14</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_15</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>StopSound</class>
						<id>StopSound_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ContextEventReceive</class>
						<id>ContextEventReceive_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								onAddQueueEvent
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>active</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\queue\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\interrupt\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_4</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								playNextQueueEvent
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_5</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								playNextQueueEvent
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_7</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								clearQueue
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_8</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoBool
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\queueClearAtStart\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_8</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_9</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\priority\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_10</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\queue\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_11</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoFloat
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\cooldownEvent\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_12</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								setEventCooldown
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_13</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								setCircumstanceGroupWeight
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>groupName</name>
								<const>\battle_phase\</const>
							</slot>
							<slot>
								<name>weight</name>
								<const>\20\</const>
							</slot>
							<slot>
								<name>hold</name>
								<const>\300.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_6</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getFirstQueueEvent
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_14</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\priority\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_6</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>And</class>
						<id>And_3</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_15</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\interrupt\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_7</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_16</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								replayLastQueueEvent
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_16</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>StringLength</class>
						<id>StringLength_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_9</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_8</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareString</class>
						<id>CompareString_1</id>
						<params/>
						<slots>
							<slot>
								<name>no_case</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_17</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_17</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoString
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\infEvent\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Not</class>
						<id>Not_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_10</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_18</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\priority\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_4</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_18</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_1</id>
						<params>
							<param>
								getSounds
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>FrameEvent</class>
						<id>FrameEvent_1</id>
						<params/>
						<slots>
							<slot>
								<name>active</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>GetVariable_1</from>
						<input>array</input>
						<to>GetFromArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_12</from>
						<input>input</input>
						<to>RemoveFromArrayByIndex_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>array</input>
						<to>RemoveFromArrayByIndex_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>input</input>
						<to>If_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_1</from>
						<input>value</input>
						<to>If_4</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>a</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>b</input>
						<to>CompareIntegers_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_17</from>
						<input>input</input>
						<to>If_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Or_1</from>
						<input>value</input>
						<to>If_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>StopSound_1</from>
						<input>input</input>
						<to>ClearArray_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>array</input>
						<to>ClearArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_10</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_10</from>
						<input>value</input>
						<to>SetVariable_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RemoveFromArrayByIndex_1</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>RemoveFromArrayByIndex_1</from>
						<input>value</input>
						<to>SetVariable_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_15</from>
						<input>array</input>
						<to>IsArrayEmpty_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>PlaySound_1</from>
						<input>input</input>
						<to>If_2</to>
						<output>onSoundStop</output>
					</connection>
					<connection>
						<from>IsArrayEmpty_1</from>
						<input>value</input>
						<to>If_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>SetVariable_7</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_7</from>
						<input>input</input>
						<to>SetVariable_7</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>SetVariable_7</to>
						<output>true</output>
					</connection>
					<connection>
						<from>SetVariable_3</from>
						<input>input</input>
						<to>SetVariable_8</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>onGetSounds</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>resultSounds</output>
					</connection>
					<connection>
						<from>Sequence_3</from>
						<input>input</input>
						<to>SendLocalEvent_1</to>
						<output>o2</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>SetVariable_5</to>
						<output>false</output>
					</connection>
					<connection>
						<from>SubtractInteger_1</from>
						<input>value</input>
						<to>SetVariable_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_8</from>
						<input>a</input>
						<to>SubtractInteger_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>a</input>
						<to>CompareIntegers_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>CompareIntegers_2</from>
						<input>i1</input>
						<to>Or_1</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>And_1</from>
						<input>i2</input>
						<to>Or_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_7</from>
						<input>sound</input>
						<to>GetSoundName_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>a</input>
						<to>CompareIntegers_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>CompareIntegers_3</from>
						<input>i1</input>
						<to>And_1</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>Not_2</from>
						<input>i2</input>
						<to>And_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_7</from>
						<input>input</input>
						<to>SetVariable_12</to>
						<output>false</output>
					</connection>
					<connection>
						<from>GetFromArray_1</from>
						<input>value</input>
						<to>SetVariable_12</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_2</from>
						<input>in</input>
						<to>PlaySound_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_12</from>
						<input>soundToPlay</input>
						<to>PlaySound_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_11</from>
						<input>input</input>
						<to>If_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>And_2</from>
						<input>value</input>
						<to>If_6</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_11</from>
						<input>array</input>
						<to>IsArrayEmpty_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_11</from>
						<input>a</input>
						<to>CompareFloats_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Not_1</from>
						<input>i1</input>
						<to>And_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>CompareFloats_2</from>
						<input>i2</input>
						<to>And_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>IsArrayEmpty_2</from>
						<input>a</input>
						<to>Not_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_9</from>
						<input>input</input>
						<to>Sequence_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>If_11</from>
						<input>input</input>
						<to>SetVariable_6</to>
						<output>false</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>value</input>
						<to>SetVariable_6</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>If_11</from>
						<input>input</input>
						<to>SendLocalEvent_2</to>
						<output>true</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>input</input>
						<to>If_11</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareString_2</from>
						<input>value</input>
						<to>If_11</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>a</input>
						<to>CompareString_2</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>GetVariable_26</from>
						<input>b</input>
						<to>CompareString_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_9</from>
						<input>input</input>
						<to>SetVariable_9</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_9</from>
						<input>value</input>
						<to>SetVariable_9</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_4</from>
						<input>input</input>
						<to>Sequence_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Sequence_3</from>
						<input>input</input>
						<to>Macro_4</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>GetVariable_13</from>
						<input>eventName</input>
						<to>Macro_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>FrameEvent_1</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>exec</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>If_3</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>CompareIntegers_5</from>
						<input>value</input>
						<to>If_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>FloatToInt_1</from>
						<input>a</input>
						<to>CompareIntegers_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ArenaPeriod_1</from>
						<input>a</input>
						<to>FloatToInt_1</to>
						<output>timeFromStart</output>
					</connection>
					<connection>
						<from>GetVariable_14</from>
						<input>array</input>
						<to>IsArrayEmpty_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ListenLocalEvent_1</from>
						<input>input</input>
						<to>If_7</to>
						<output>exec</output>
					</connection>
					<connection>
						<from>IsArrayEmpty_3</from>
						<input>value</input>
						<to>If_7</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_5</from>
						<input>in</input>
						<to>StopSound_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_10</from>
						<input>sound</input>
						<to>StopSound_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventReceive_2</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventReceive_2</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>If_10</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>ContextEventReceive_2</from>
						<input>eventName</input>
						<to>ContextEventCall_3</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>SetVariable_7</from>
						<input>in</input>
						<to>ContextEventCall_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>queueNum</input>
						<to>ContextEventCall_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_8</from>
						<input>in</input>
						<to>ContextEventCall_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_5</from>
						<input>queueNum</input>
						<to>ContextEventCall_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_8</from>
						<input>in</input>
						<to>ContextEventCall_7</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_25</from>
						<input>queueNum</input>
						<to>ContextEventCall_7</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_2</from>
						<input>in</input>
						<to>ContextEventCall_8</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>GetVariable_27</from>
						<input>eventName</input>
						<to>ContextEventCall_8</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>input</input>
						<to>If_8</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>value</input>
						<to>If_8</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_6</from>
						<input>in</input>
						<to>ContextEventCall_9</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_31</from>
						<input>eventName</input>
						<to>ContextEventCall_9</to>
						<output>value</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>in</input>
						<to>ContextEventCall_10</to>
						<output>input</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>ContextEventCall_10</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>Sequence_3</from>
						<input>in</input>
						<to>ContextEventCall_11</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>GetVariable_28</from>
						<input>eventName</input>
						<to>ContextEventCall_11</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_6</from>
						<input>in</input>
						<to>ContextEventCall_12</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_29</from>
						<input>eventName</input>
						<to>ContextEventCall_12</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_11</from>
						<input>cooldown</input>
						<to>ContextEventCall_12</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>in</input>
						<to>ContextEventCall_13</to>
						<output>true</output>
					</connection>
					<connection>
						<from>SetVariable_5</from>
						<input>in</input>
						<to>ContextEventCall_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_33</from>
						<input>queueNum</input>
						<to>ContextEventCall_6</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_9</from>
						<input>in</input>
						<to>ContextEventCall_14</to>
						<output>true</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>eventName</input>
						<to>ContextEventCall_14</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_15</from>
						<input>input</input>
						<to>If_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>And_3</from>
						<input>value</input>
						<to>If_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_14</from>
						<input>a</input>
						<to>CompareIntegers_6</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_9</from>
						<input>b</input>
						<to>CompareIntegers_6</to>
						<output>value</output>
					</connection>
					<connection>
						<from>CompareIntegers_7</from>
						<input>i1</input>
						<to>And_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>CompareIntegers_6</from>
						<input>i2</input>
						<to>And_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>ContextEventCall_14</from>
						<input>in</input>
						<to>ContextEventCall_15</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>eventName</input>
						<to>ContextEventCall_15</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_15</from>
						<input>a</input>
						<to>CompareIntegers_7</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>in</input>
						<to>ContextEventCall_16</to>
						<output>false</output>
					</connection>
					<connection>
						<from>If_9</from>
						<input>in</input>
						<to>ContextEventCall_16</to>
						<output>false</output>
					</connection>
					<connection>
						<from>GetVariable_16</from>
						<input>queueNum</input>
						<to>ContextEventCall_16</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>a</input>
						<to>StringLength_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>input</input>
						<to>If_9</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_8</from>
						<input>value</input>
						<to>If_9</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>StringLength_1</from>
						<input>a</input>
						<to>CompareIntegers_8</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_17</from>
						<input>a</input>
						<to>CompareString_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetSoundName_1</from>
						<input>b</input>
						<to>CompareString_1</to>
						<output>name</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>in</input>
						<to>ContextEventCall_17</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_17</from>
						<input>eventName</input>
						<to>ContextEventCall_17</to>
						<output>value</output>
					</connection>
					<connection>
						<from>CompareString_1</from>
						<input>a</input>
						<to>Not_2</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>ContextEventCall_18</from>
						<input>input</input>
						<to>If_10</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_4</from>
						<input>value</input>
						<to>If_10</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>If_4</from>
						<input>in</input>
						<to>ContextEventCall_18</to>
						<output>true</output>
					</connection>
					<connection>
						<from>ContextEventReceive_2</from>
						<input>eventName</input>
						<to>ContextEventCall_18</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_18</from>
						<input>a</input>
						<to>CompareIntegers_4</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_18</from>
						<input>b</input>
						<to>CompareIntegers_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_2</from>
						<input>input</input>
						<to>Macro_1</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>GetVariable_6</from>
						<input>eventName</input>
						<to>Macro_1</to>
						<output>value</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getSounds</name>
				<blocks>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								sounds
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								onGetSounds
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								resultSounds
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundArrayT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_4</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
							<slot>
								<name>b</name>
								<const>\99\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_1</id>
						<params>
							<param>
								getInfoSound
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_1</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_4</id>
						<params>
							<param>
								getCircumstances
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_6</id>
						<params>
							<param>
								getEventChain
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								3
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_2</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_3</id>
						<params>
							<param>
								SoundArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_5</id>
						<params>
							<param>
								getVehicleSound
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_2</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Create2DSound</class>
						<id>Create2DSound_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IsVehicleValid</class>
						<id>IsVehicleValid_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetAnyVehicle</class>
						<id>GetAnyVehicle_1</id>
						<params>
							<param>
								Ally
								<name>Vehicle Team</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>FindSubstring</class>
						<id>FindSubstring_1</id>
						<params/>
						<slots>
							<slot>
								<name>substring</name>
								<const>\ch_ally\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\infChance\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>ContextEventCall_2</from>
						<input>input</input>
						<to>If_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>value</input>
						<to>SetVariable_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>onGetSounds</input>
						<to>MacroOutput_1</to>
						<output>o2</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>resultSounds</input>
						<to>MacroOutput_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_4</from>
						<input>input</input>
						<to>ClearArray_1</to>
						<output>input</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>array</input>
						<to>ClearArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>a</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_1</from>
						<input>b</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>Macro_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>Macro_1</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>input</input>
						<to>AddToArray_1</to>
						<output>onGetInfoSound</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>array</input>
						<to>AddToArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>value</input>
						<to>AddToArray_1</to>
						<output>infoSound</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>Macro_4</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>Macro_4</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>Macro_4</from>
						<input>input</input>
						<to>Macro_6</to>
						<output>onGetCircumstances</output>
					</connection>
					<connection>
						<from>Macro_4</from>
						<input>circumstances</input>
						<to>Macro_6</to>
						<output>circumstances</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>Macro_6</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Macro_6</from>
						<input>input</input>
						<to>IterateArray_1</to>
						<output>onGetEventChain</output>
					</connection>
					<connection>
						<from>Macro_6</from>
						<input>array</input>
						<to>IterateArray_1</to>
						<output>outEventChain</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>value</input>
						<to>SetVariable_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>AddToArray_2</to>
						<output>false</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>array</input>
						<to>AddToArray_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Create2DSound_1</from>
						<input>value</input>
						<to>AddToArray_2</to>
						<output>sound</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>input</input>
						<to>If_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_2</from>
						<input>value</input>
						<to>If_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>input</input>
						<to>AddToArray_3</to>
						<output>onGetVehicleSound</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>array</input>
						<to>AddToArray_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>value</input>
						<to>AddToArray_3</to>
						<output>vehicleSound</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>Macro_5</to>
						<output>true</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>voice</input>
						<to>Macro_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetAnyVehicle_1</from>
						<input>vehicle</input>
						<to>Macro_5</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>FindSubstring_1</from>
						<input>a</input>
						<to>CompareIntegers_2</to>
						<output>index</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>soundName</input>
						<to>Create2DSound_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetAnyVehicle_1</from>
						<input>vehicle</input>
						<to>IsVehicleValid_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>If_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>IsVehicleValid_1</from>
						<input>value</input>
						<to>If_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>string</input>
						<to>FindSubstring_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>eventName</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getInfoSound</name>
				<blocks>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								onGetInfoSound
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								infoSound
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								infSound
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\00000000.00000000.00000000.00000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IsVehicleValid</class>
						<id>IsVehicleValid_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								SoundT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_1</id>
						<params>
							<param>
								getVehicleSound
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Create2DSound</class>
						<id>Create2DSound_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Create3DSound</class>
						<id>Create3DSound_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_2</id>
						<params>
							<param>
								currentEventName
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_5</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\queue\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getPlayingEventIs2D
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_4</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoString
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\infEvent\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_5</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getPlayingEventVehicle
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_6</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoString
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\infEvent\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_7</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getPlayingEventPosition
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_8</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoString
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\infEvent\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>ContextEventCall_3</from>
						<input>input</input>
						<to>If_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>value</input>
						<to>If_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>onGetInfoSound</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_2</from>
						<input>onGetInfoSound</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_3</from>
						<input>onGetInfoSound</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>infoSound</input>
						<to>MacroOutput_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Create2DSound_1</from>
						<input>value</input>
						<to>SetVariable_1</to>
						<output>sound</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>onGetVehicleSound</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>value</input>
						<to>SetVariable_2</to>
						<output>vehicleSound</output>
					</connection>
					<connection>
						<from>ContextEventCall_5</from>
						<input>vehicle</input>
						<to>IsVehicleValid_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_5</from>
						<input>input</input>
						<to>If_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>IsVehicleValid_1</from>
						<input>value</input>
						<to>If_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Create3DSound_1</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>sound</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>input</input>
						<to>Macro_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>voice</input>
						<to>Macro_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_5</from>
						<input>vehicle</input>
						<to>Macro_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>soundName</input>
						<to>Create2DSound_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>soundName</input>
						<to>Create3DSound_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>soundObjectName</input>
						<to>Create3DSound_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_7</from>
						<input>position</input>
						<to>Create3DSound_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>input</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>SetVariable_4</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_5</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>queueNum</input>
						<to>ContextEventCall_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>in</input>
						<to>ContextEventCall_4</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>eventName</input>
						<to>ContextEventCall_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>in</input>
						<to>ContextEventCall_5</to>
						<output>false</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>queueNum</input>
						<to>ContextEventCall_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>in</input>
						<to>ContextEventCall_6</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>eventName</input>
						<to>ContextEventCall_6</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>in</input>
						<to>ContextEventCall_7</to>
						<output>false</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>queueNum</input>
						<to>ContextEventCall_7</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_7</from>
						<input>in</input>
						<to>ContextEventCall_8</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>eventName</input>
						<to>ContextEventCall_8</to>
						<output>value</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getCircumstances</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_5</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								resultCircs
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								6
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_5</id>
						<params>
							<param>
								getSpaceCirc
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_2</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_3</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								circumstances
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								onGetCircumstances
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_1</id>
						<params>
							<param>
								getHealthCirc
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>isPc</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_6</id>
						<params>
							<param>
								getHealthCirc
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>isPc</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_4</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_5</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_4</id>
						<params>
							<param>
								getBattlePhaseCirc
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IsVehicleValid</class>
						<id>IsVehicleValid_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IsVehicleValid</class>
						<id>IsVehicleValid_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Get Player Vehicle</class>
						<id>Get Player Vehicle_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_5</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_6</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\queue\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getPlayingEventBoundVehicle
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_7</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>RemoveFromArray</class>
						<id>RemoveFromArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>all</name>
								<const>\true\</const>
							</slot>
							<slot>
								<name>value</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_6</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>ClearArray_1</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>value</input>
						<to>SetVariable_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_5</from>
						<input>input</input>
						<to>ClearArray_1</to>
						<output>input</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>array</input>
						<to>ClearArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>Macro_5</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>input</input>
						<to>AddToArray_1</to>
						<output>onGetSpaceCirc</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>array</input>
						<to>AddToArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>value</input>
						<to>AddToArray_1</to>
						<output>spaceCirc</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>value</input>
						<to>SetVariable_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Macro_4</from>
						<input>input</input>
						<to>AddToArray_2</to>
						<output>onBattlePhaseCirc</output>
					</connection>
					<connection>
						<from>GetVariable_5</from>
						<input>array</input>
						<to>AddToArray_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_4</from>
						<input>value</input>
						<to>AddToArray_2</to>
						<output>battlePhaseCirc</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>input</input>
						<to>AddToArray_3</to>
						<output>onGetHealthCirc</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>array</input>
						<to>AddToArray_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_1</from>
						<input>value</input>
						<to>AddToArray_3</to>
						<output>healthCirc</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>circumstances</input>
						<to>MacroOutput_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>onGetCircumstances</input>
						<to>MacroOutput_2</to>
						<output>o5</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>Macro_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>Get Player Vehicle_1</from>
						<input>vehicle</input>
						<to>Macro_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>Macro_6</to>
						<output>true</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>vehicle</input>
						<to>Macro_6</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Macro_6</from>
						<input>input</input>
						<to>AddToArray_4</to>
						<output>onGetHealthCirc</output>
					</connection>
					<connection>
						<from>GetVariable_6</from>
						<input>array</input>
						<to>AddToArray_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Macro_6</from>
						<input>value</input>
						<to>AddToArray_4</to>
						<output>healthCirc</output>
					</connection>
					<connection>
						<from>AddToArray_4</from>
						<input>input</input>
						<to>SetVariable_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_4</from>
						<input>value</input>
						<to>SetVariable_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>Macro_4</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>If_1</to>
						<output>o2</output>
					</connection>
					<connection>
						<from>IsVehicleValid_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Get Player Vehicle_1</from>
						<input>vehicle</input>
						<to>IsVehicleValid_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>input</input>
						<to>If_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>IsVehicleValid_2</from>
						<input>value</input>
						<to>If_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>vehicle</input>
						<to>IsVehicleValid_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>o3</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>queueNum</input>
						<to>ContextEventCall_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>RemoveFromArray_1</to>
						<output>o4</output>
					</connection>
					<connection>
						<from>GetVariable_7</from>
						<input>array</input>
						<to>RemoveFromArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>RemoveFromArray_1</from>
						<input>input</input>
						<to>SetVariable_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>RemoveFromArray_1</from>
						<input>value</input>
						<to>SetVariable_6</to>
						<output>res</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getHealthCirc</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								tempHealthCirc
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareFloats</class>
						<id>CompareFloats_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\97.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Concatenate</class>
						<id>Concatenate_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\2_\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								onGetHealthCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\2\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								2
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_2</id>
						<params>
							<param>
								health
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVehicleHealth</class>
						<id>GetVehicleHealth_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVehicleMaxHealth</class>
						<id>GetVehicleMaxHealth_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>DivideFloat</class>
						<id>DivideFloat_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareFloats</class>
						<id>CompareFloats_2</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\66.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_5</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Concatenate</class>
						<id>Concatenate_2</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\3_\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_5</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareFloats</class>
						<id>CompareFloats_3</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\33.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_6</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\3\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_4</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_6</id>
						<buddy>Variable_2</buddy>
						<params>
							<param>
								FloatT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareFloats</class>
						<id>CompareFloats_4</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\6.000000\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_7</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\4\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_5</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_8</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\5\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								healthCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_3</id>
						<params>
							<param>
								vehicle
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								VehicleT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								isPc
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								BoolT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MultiplyFloat</class>
						<id>MultiplyFloat_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\100.000000\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>If_1</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>CompareFloats_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>a</input>
						<to>CompareFloats_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>i1</input>
						<to>Concatenate_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_4</from>
						<input>onGetHealthCirc</input>
						<to>MacroOutput_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_5</from>
						<input>onGetHealthCirc</input>
						<to>MacroOutput_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>If_2</to>
						<output>false</output>
					</connection>
					<connection>
						<from>CompareFloats_2</from>
						<input>value</input>
						<to>If_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>SetVariable_3</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>input</output>
					</connection>
					<connection>
						<from>MultiplyFloat_1</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_3</from>
						<input>vehicle</input>
						<to>GetVehicleHealth_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>MacroInput_3</from>
						<input>vehicle</input>
						<to>GetVehicleMaxHealth_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>GetVehicleHealth_1</from>
						<input>a</input>
						<to>DivideFloat_1</to>
						<output>health</output>
					</connection>
					<connection>
						<from>GetVehicleMaxHealth_1</from>
						<input>b</input>
						<to>DivideFloat_1</to>
						<output>maxHealth</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>a</input>
						<to>CompareFloats_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>If_3</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>value</input>
						<to>If_3</to>
						<output>isPc</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>true</output>
					</connection>
					<connection>
						<from>Concatenate_1</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_5</to>
						<output>false</output>
					</connection>
					<connection>
						<from>Concatenate_2</from>
						<input>value</input>
						<to>SetVariable_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>i1</input>
						<to>Concatenate_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetVariable_5</from>
						<input>a</input>
						<to>CompareFloats_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_4</from>
						<input>input</input>
						<to>SetVariable_6</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>If_4</to>
						<output>false</output>
					</connection>
					<connection>
						<from>CompareFloats_3</from>
						<input>value</input>
						<to>If_4</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>GetVariable_6</from>
						<input>a</input>
						<to>CompareFloats_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_5</from>
						<input>input</input>
						<to>SetVariable_7</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_4</from>
						<input>input</input>
						<to>If_5</to>
						<output>false</output>
					</connection>
					<connection>
						<from>CompareFloats_4</from>
						<input>value</input>
						<to>If_5</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>If_5</from>
						<input>input</input>
						<to>SetVariable_8</to>
						<output>false</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>healthCirc</input>
						<to>MacroOutput_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>DivideFloat_1</from>
						<input>i1</input>
						<to>MultiplyFloat_1</to>
						<output>res</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getSpaceCirc</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								spaceCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								onGetSpaceCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetSpaceName</class>
						<id>GetSpaceName_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getCircumstanceIndex
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>circGroup</name>
								<const>\space\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>ContextEventCall_2</from>
						<input>spaceCirc</input>
						<to>MacroOutput_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>onGetSpaceCirc</input>
						<to>MacroOutput_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>input</output>
					</connection>
					<connection>
						<from>GetSpaceName_1</from>
						<input>circName</input>
						<to>ContextEventCall_2</to>
						<output>spaceName</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getBattlePhaseCirc</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								tempBattlePhaseCirc
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								onBattlePhaseCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								battlePhaseCirc
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ArenaPeriod</class>
						<id>ArenaPeriod_1</id>
						<params>
							<param>
								Battle
								<name>Period</name>
								<type>EArenaPeriodT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\300\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>FloatToInt</class>
						<id>FloatToInt_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\4_1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_2</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\600\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>FloatToInt</class>
						<id>FloatToInt_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\4_2\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\4_3\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>SetVariable_1</from>
						<input>onBattlePhaseCirc</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_2</from>
						<input>onBattlePhaseCirc</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_3</from>
						<input>onBattlePhaseCirc</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>battlePhaseCirc</input>
						<to>MacroOutput_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>input</input>
						<to>If_2</to>
						<output>input</output>
					</connection>
					<connection>
						<from>CompareIntegers_1</from>
						<input>value</input>
						<to>If_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>FloatToInt_1</from>
						<input>a</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ArenaPeriod_1</from>
						<input>a</input>
						<to>FloatToInt_1</to>
						<output>timeFromStart</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>false</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>If_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>CompareIntegers_2</from>
						<input>value</input>
						<to>If_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>FloatToInt_2</from>
						<input>a</input>
						<to>CompareIntegers_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ArenaPeriod_1</from>
						<input>a</input>
						<to>FloatToInt_2</to>
						<output>timeFromStart</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>false</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>true</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getCircsNumber</name>
				<blocks>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_3</id>
						<params>
							<param>
								circsNum
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_5</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
							<slot>
								<name>b</name>
								<const>\99\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								tempCircsNum
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\3\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_2</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
							<slot>
								<name>b</name>
								<const>\99\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\2\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_3</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
							<slot>
								<name>b</name>
								<const>\99\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								onGetCircsNumber
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\circAmount3Chance\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_4</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\circAmount1Chance\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\circAmount2Chance\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>GetVariable_1</from>
						<input>circsNum</input>
						<to>MacroOutput_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>input</input>
						<to>If_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>a</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_1</from>
						<input>b</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>a</input>
						<to>CompareIntegers_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_2</from>
						<input>b</input>
						<to>CompareIntegers_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>If_2</to>
						<output>false</output>
					</connection>
					<connection>
						<from>CompareIntegers_2</from>
						<input>value</input>
						<to>If_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>If_3</to>
						<output>false</output>
					</connection>
					<connection>
						<from>CompareIntegers_3</from>
						<input>value</input>
						<to>If_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>a</input>
						<to>CompareIntegers_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_3</from>
						<input>b</input>
						<to>CompareIntegers_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>false</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>onGetCircsNumber</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_2</from>
						<input>onGetCircsNumber</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_3</from>
						<input>onGetCircsNumber</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_4</from>
						<input>onGetCircsNumber</input>
						<to>MacroOutput_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>input</output>
					</connection>
					<connection>
						<from>MacroInput_5</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>in</input>
						<to>ContextEventCall_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_5</from>
						<input>eventName</input>
						<to>ContextEventCall_4</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_5</from>
						<input>eventName</input>
						<to>ContextEventCall_3</to>
						<output>eventName</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getEventChain</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Macro</class>
						<id>Macro_5</id>
						<params>
							<param>
								getCircsNumber
								<name>Macro Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_3</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								8
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_2</id>
						<params>
							<param>
								circumstances
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_1</id>
						<params>
							<param>
								matchedCircumstances
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_2</id>
						<params>
							<param>
								matchedSoundNames
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_1</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_3</id>
						<params>
							<param>
								totalWeight
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_5</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_4</id>
						<params>
							<param>
								circsNum
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_6</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_5</id>
						<params>
							<param>
								resultCircumstances
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_3</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_8</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_7</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_4</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_8</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_9</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ArrayLength</class>
						<id>ArrayLength_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_3</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_9</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_10</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_10</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_5</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_4</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_5</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>FindInArray</class>
						<id>FindInArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_4</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_2</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MultiplyInteger</class>
						<id>MultiplyInteger_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_4</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SubtractInteger</class>
						<id>SubtractInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_12</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_6</id>
						<params>
							<param>
								eventChain
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_2</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ClearArray</class>
						<id>ClearArray_2</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_13</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_1</id>
						<params>
							<param>
								onGetEventChain
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_2</id>
						<params>
							<param>
								outEventChain
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringArrayT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_16</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>RandomInteger</class>
						<id>RandomInteger_2</id>
						<params/>
						<slots>
							<slot>
								<name>a</name>
								<const>\0\</const>
							</slot>
							<slot>
								<name>b</name>
								<const>\99\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_5</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_1</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_2</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Concatenate</class>
						<id>Concatenate_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\circ\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_8</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_3</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_2</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_9</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_3</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_17</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_12</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_18</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_5</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>AddInteger</class>
						<id>AddInteger_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_3</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_7</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_6</id>
						<buddy>Variable_3</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_6</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_6</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>If</class>
						<id>If_6</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_4</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_14</id>
						<buddy>Variable_6</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Concatenate</class>
						<id>Concatenate_2</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\circ\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>AddToArray</class>
						<id>AddToArray_5</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>unique</name>
								<const>\false\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>IterateArray</class>
						<id>IterateArray_7</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>forward</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_7</id>
						<params>
							<param>
								currentEventName
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_11</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_15</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_19</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_20</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_21</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_22</id>
						<buddy>Variable_7</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_23</id>
						<buddy>Variable_1</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_8</id>
						<params>
							<param>
								largestWeight
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\0\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Variable</class>
						<id>Variable_9</id>
						<params>
							<param>
								largestWeightCirc
								<name>Variable Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
							<param>
								false
								<name>Is Global</name>
								<type>BoolT</type>
							</param>
							<param>
								false
								<name>Is Const</name>
								<type>BoolT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>default</name>
								<const>\\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_13</id>
						<buddy>Variable_8</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>value</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_7</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_24</id>
						<buddy>Variable_8</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_14</id>
						<buddy>Variable_9</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ArrayLength</class>
						<id>ArrayLength_3</id>
						<params>
							<param>
								StringArrayT
								<name>Array Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_26</id>
						<buddy>Variable_4</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_27</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>And</class>
						<id>And_1</id>
						<params>
							<param>
								2
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_11</id>
						<buddy>Variable_9</buddy>
						<params>
							<param>
								StringT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_28</id>
						<buddy>Variable_5</buddy>
						<params>
							<param>
								StringArrayT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>SetVariable</class>
						<id>SetVariable_15</id>
						<buddy>Variable_8</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>For</class>
						<id>For_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_4</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVariable</class>
						<id>GetVariable_25</id>
						<buddy>Variable_8</buddy>
						<params>
							<param>
								IntT
								<name>Variable Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareIntegers</class>
						<id>CompareIntegers_3</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\-1\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>FindSubstring</class>
						<id>FindSubstring_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>FindSubstring</class>
						<id>FindSubstring_2</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\fbChance\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoString
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\fbEvent\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_4</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoStringArray
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\eventList\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_5</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoStringArray
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\eventList\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_6</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getCircumstanceInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\weight\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_7</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getCircumstanceInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\weight\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_8</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getCircumstanceInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\weight\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>Macro_5</to>
						<output>o1</output>
					</connection>
					<connection>
						<from>GetVariable_20</from>
						<input>eventName</input>
						<to>Macro_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_2</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>SetVariable_8</from>
						<input>input</input>
						<to>ClearArray_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_1</from>
						<input>array</input>
						<to>ClearArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>input</input>
						<to>SetVariable_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_1</from>
						<input>value</input>
						<to>SetVariable_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>input</input>
						<to>SetVariable_6</to>
						<output>onGetCircsNumber</output>
					</connection>
					<connection>
						<from>Macro_5</from>
						<input>value</input>
						<to>SetVariable_6</to>
						<output>circsNum</output>
					</connection>
					<connection>
						<from>SetVariable_11</from>
						<input>input</input>
						<to>ClearArray_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_7</from>
						<input>array</input>
						<to>ClearArray_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ClearArray_3</from>
						<input>input</input>
						<to>SetVariable_8</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_3</from>
						<input>value</input>
						<to>SetVariable_8</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>IterateArray_4</to>
						<output>o4</output>
					</connection>
					<connection>
						<from>GetVariable_5</from>
						<input>array</input>
						<to>IterateArray_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>input</input>
						<to>If_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>MultiplyInteger_1</from>
						<input>a</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_1</from>
						<input>b</input>
						<to>CompareIntegers_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SubtractInteger_1</from>
						<input>b</input>
						<to>RandomInteger_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_3</from>
						<input>input</input>
						<to>AddToArray_1</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_8</from>
						<input>array</input>
						<to>AddToArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_4</from>
						<input>value</input>
						<to>AddToArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>input</input>
						<to>SetVariable_9</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_1</from>
						<input>value</input>
						<to>SetVariable_9</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_8</from>
						<input>array</input>
						<to>ArrayLength_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>input</input>
						<to>If_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>CompareIntegers_2</from>
						<input>value</input>
						<to>If_3</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>GetVariable_9</from>
						<input>a</input>
						<to>CompareIntegers_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ArrayLength_1</from>
						<input>b</input>
						<to>CompareIntegers_2</to>
						<output>length</output>
					</connection>
					<connection>
						<from>AddToArray_4</from>
						<input>input</input>
						<to>SetVariable_10</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_4</from>
						<input>value</input>
						<to>SetVariable_10</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_13</from>
						<input>input</input>
						<to>IterateArray_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_23</from>
						<input>array</input>
						<to>IterateArray_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_4</from>
						<input>input</input>
						<to>AddToArray_4</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_28</from>
						<input>array</input>
						<to>AddToArray_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetVariable_11</from>
						<input>value</input>
						<to>AddToArray_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>input</input>
						<to>If_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>And_1</from>
						<input>value</input>
						<to>If_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_10</from>
						<input>array</input>
						<to>FindInArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_5</from>
						<input>value</input>
						<to>FindInArray_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>FindInArray_1</from>
						<input>a</input>
						<to>CompareIntegers_4</to>
						<output>index</output>
					</connection>
					<connection>
						<from>ContextEventCall_8</from>
						<input>i0</input>
						<to>MultiplyInteger_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_4</from>
						<input>i1</input>
						<to>MultiplyInteger_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetVariable_2</from>
						<input>a</input>
						<to>SubtractInteger_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ClearArray_2</from>
						<input>input</input>
						<to>SetVariable_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ClearArray_2</from>
						<input>value</input>
						<to>SetVariable_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>SetVariable_1</from>
						<input>input</input>
						<to>ClearArray_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_13</from>
						<input>array</input>
						<to>ClearArray_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>onGetEventChain</input>
						<to>MacroOutput_1</to>
						<output>o7</output>
					</connection>
					<connection>
						<from>GetVariable_16</from>
						<input>outEventChain</input>
						<to>MacroOutput_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>a</input>
						<to>CompareIntegers_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>RandomInteger_2</from>
						<input>b</input>
						<to>CompareIntegers_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_5</from>
						<input>input</input>
						<to>IterateArray_1</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_5</from>
						<input>array</input>
						<to>IterateArray_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>If_2</from>
						<input>input</input>
						<to>AddToArray_2</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_3</from>
						<input>array</input>
						<to>AddToArray_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_2</from>
						<input>value</input>
						<to>AddToArray_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_2</from>
						<input>i1</input>
						<to>Concatenate_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>FindSubstring_1</from>
						<input>a</input>
						<to>CompareIntegers_8</to>
						<output>index</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>input</input>
						<to>SetVariable_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_2</from>
						<input>value</input>
						<to>SetVariable_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>IterateArray_2</from>
						<input>input</input>
						<to>If_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_8</from>
						<input>value</input>
						<to>If_2</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>input</input>
						<to>IterateArray_2</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_2</from>
						<input>array</input>
						<to>IterateArray_2</to>
						<output>circumstances</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>input</input>
						<to>If_9</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_5</from>
						<input>value</input>
						<to>If_9</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>input</input>
						<to>AddToArray_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_17</from>
						<input>array</input>
						<to>AddToArray_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_3</from>
						<input>value</input>
						<to>AddToArray_3</to>
						<output>res</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>input</input>
						<to>SetVariable_12</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_3</from>
						<input>value</input>
						<to>SetVariable_12</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_7</from>
						<input>input</input>
						<to>SetVariable_5</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddInteger_1</from>
						<input>value</input>
						<to>SetVariable_5</to>
						<output>res</output>
					</connection>
					<connection>
						<from>ContextEventCall_7</from>
						<input>i0</input>
						<to>AddInteger_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_6</from>
						<input>i1</input>
						<to>AddInteger_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>SetVariable_7</from>
						<input>input</input>
						<to>IterateArray_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_18</from>
						<input>array</input>
						<to>IterateArray_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>SetVariable_7</to>
						<output>o3</output>
					</connection>
					<connection>
						<from>IterateArray_7</from>
						<input>input</input>
						<to>IterateArray_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>array</input>
						<to>IterateArray_6</to>
						<output>res</output>
					</connection>
					<connection>
						<from>FindSubstring_2</from>
						<input>a</input>
						<to>CompareIntegers_6</to>
						<output>index</output>
					</connection>
					<connection>
						<from>IterateArray_6</from>
						<input>input</input>
						<to>If_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>CompareIntegers_6</from>
						<input>value</input>
						<to>If_6</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>AddToArray_5</from>
						<input>input</input>
						<to>SetVariable_4</to>
						<output>out</output>
					</connection>
					<connection>
						<from>AddToArray_5</from>
						<input>value</input>
						<to>SetVariable_4</to>
						<output>res</output>
					</connection>
					<connection>
						<from>IterateArray_7</from>
						<input>i1</input>
						<to>Concatenate_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_6</from>
						<input>input</input>
						<to>AddToArray_5</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_14</from>
						<input>array</input>
						<to>AddToArray_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_6</from>
						<input>value</input>
						<to>AddToArray_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>ContextEventCall_4</from>
						<input>input</input>
						<to>IterateArray_7</to>
						<output>out</output>
					</connection>
					<connection>
						<from>GetVariable_12</from>
						<input>array</input>
						<to>IterateArray_7</to>
						<output>value</output>
					</connection>
					<connection>
						<from>MacroInput_3</from>
						<input>input</input>
						<to>SetVariable_11</to>
						<output>input</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>value</input>
						<to>SetVariable_11</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>For_1</from>
						<input>input</input>
						<to>SetVariable_13</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>a</input>
						<to>CompareIntegers_7</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVariable_24</from>
						<input>b</input>
						<to>CompareIntegers_7</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_5</from>
						<input>input</input>
						<to>SetVariable_14</to>
						<output>true</output>
					</connection>
					<connection>
						<from>IterateArray_5</from>
						<input>value</input>
						<to>SetVariable_14</to>
						<output>value</output>
					</connection>
					<connection>
						<from>GetVariable_27</from>
						<input>array</input>
						<to>ArrayLength_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>CompareIntegers_7</from>
						<input>i1</input>
						<to>And_1</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>CompareIntegers_4</from>
						<input>i2</input>
						<to>And_1</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>SetVariable_14</from>
						<input>input</input>
						<to>SetVariable_15</to>
						<output>out</output>
					</connection>
					<connection>
						<from>ContextEventCall_6</from>
						<input>value</input>
						<to>SetVariable_15</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>For_1</to>
						<output>o5</output>
					</connection>
					<connection>
						<from>ArrayLength_3</from>
						<input>start</input>
						<to>For_1</to>
						<output>length</output>
					</connection>
					<connection>
						<from>GetVariable_26</from>
						<input>end</input>
						<to>For_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_5</from>
						<input>input</input>
						<to>If_4</to>
						<output>complete</output>
					</connection>
					<connection>
						<from>CompareIntegers_3</from>
						<input>value</input>
						<to>If_4</to>
						<output>greater</output>
					</connection>
					<connection>
						<from>GetVariable_25</from>
						<input>a</input>
						<to>CompareIntegers_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_1</from>
						<input>string</input>
						<to>FindSubstring_1</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Concatenate_1</from>
						<input>substring</input>
						<to>FindSubstring_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>IterateArray_6</from>
						<input>string</input>
						<to>FindSubstring_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Concatenate_2</from>
						<input>substring</input>
						<to>FindSubstring_2</to>
						<output>res</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>GetVariable_15</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>value</output>
					</connection>
					<connection>
						<from>If_9</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>true</output>
					</connection>
					<connection>
						<from>GetVariable_21</from>
						<input>eventName</input>
						<to>ContextEventCall_3</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>in</input>
						<to>ContextEventCall_4</to>
						<output>o6</output>
					</connection>
					<connection>
						<from>GetVariable_22</from>
						<input>eventName</input>
						<to>ContextEventCall_4</to>
						<output>value</output>
					</connection>
					<connection>
						<from>Sequence_1</from>
						<input>in</input>
						<to>ContextEventCall_5</to>
						<output>o2</output>
					</connection>
					<connection>
						<from>GetVariable_19</from>
						<input>eventName</input>
						<to>ContextEventCall_5</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_5</from>
						<input>in</input>
						<to>ContextEventCall_6</to>
						<output>out</output>
					</connection>
					<connection>
						<from>IterateArray_5</from>
						<input>circIndex</input>
						<to>ContextEventCall_6</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_3</from>
						<input>in</input>
						<to>ContextEventCall_7</to>
						<output>out</output>
					</connection>
					<connection>
						<from>IterateArray_3</from>
						<input>circIndex</input>
						<to>ContextEventCall_7</to>
						<output>value</output>
					</connection>
					<connection>
						<from>IterateArray_4</from>
						<input>in</input>
						<to>ContextEventCall_8</to>
						<output>out</output>
					</connection>
					<connection>
						<from>IterateArray_4</from>
						<input>circIndex</input>
						<to>ContextEventCall_8</to>
						<output>value</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>getVehicleSound</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_4</id>
						<params>
							<param>
								vehicle
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								VehicleT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_3</id>
						<params>
							<param>
								vehicleSound
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								SoundT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_5</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>MacroOutput</class>
						<id>MacroOutput_4</id>
						<params>
							<param>
								onGetVehicleSound
								<name>Output Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Output Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>IntToString</class>
						<id>IntToString_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVehicleTransform</class>
						<id>GetVehicleTransform_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>GetVehicleId</class>
						<id>GetVehicleId_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>Concatenate</class>
						<id>Concatenate_1</id>
						<params>
							<param>
								4
								<name>Input Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>i0</name>
								<const>\Vehicle_\</const>
							</slot>
							<slot>
								<name>i2</name>
								<const>\_\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								voice
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>Create3DSound</class>
						<id>Create3DSound_1</id>
						<params/>
						<slots/>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>Create3DSound_1</from>
						<input>vehicleSound</input>
						<to>MacroOutput_3</to>
						<output>sound</output>
					</connection>
					<connection>
						<from>MacroInput_5</from>
						<input>onGetVehicleSound</input>
						<to>MacroOutput_4</to>
						<output>input</output>
					</connection>
					<connection>
						<from>GetVehicleId_1</from>
						<input>a</input>
						<to>IntToString_1</to>
						<output>id</output>
					</connection>
					<connection>
						<from>MacroInput_4</from>
						<input>vehicle</input>
						<to>GetVehicleTransform_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>MacroInput_4</from>
						<input>vehicle</input>
						<to>GetVehicleId_1</to>
						<output>vehicle</output>
					</connection>
					<connection>
						<from>IntToString_1</from>
						<input>i1</input>
						<to>Concatenate_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>i3</input>
						<to>Concatenate_1</to>
						<output>voice</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>soundName</input>
						<to>Create3DSound_1</to>
						<output>voice</output>
					</connection>
					<connection>
						<from>Concatenate_1</from>
						<input>soundObjectName</input>
						<to>Create3DSound_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>GetVehicleTransform_1</from>
						<input>position</input>
						<to>Create3DSound_1</to>
						<output>position</output>
					</connection>
				</connections>
			</macro>
			<macro>
				<name>setEventAdditionalOptions</name>
				<blocks>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_3</id>
						<params>
							<param>
								input
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								EventT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>If</class>
						<id>If_1</id>
						<params/>
						<slots/>
					</block>
					<block>
						<class>MacroInput</class>
						<id>MacroInput_1</id>
						<params>
							<param>
								eventName
								<name>Input Name</name>
								<type>StringT</type>
							</param>
							<param>
								StringT
								<name>Input Type</name>
								<type>TypeT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>CompareString</class>
						<id>CompareString_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\test_event\</const>
							</slot>
							<slot>
								<name>no_case</name>
								<const>\true\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>SubtractInteger</class>
						<id>SubtractInteger_1</id>
						<params/>
						<slots>
							<slot>
								<name>b</name>
								<const>\20\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>Sequence</class>
						<id>Sequence_1</id>
						<params>
							<param>
								2
								<name>Output Count</name>
								<type>IntT</type>
							</param>
						</params>
						<slots/>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_2</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								getEventInfoInt
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>parameter</name>
								<const>\priority\</const>
							</slot>
						</slots>
					</block>
					<block>
						<class>ContextEventCall</class>
						<id>ContextEventCall_3</id>
						<params>
							<param>
								SoundNotificationsContext
								<name>Context Name</name>
								<type>StringT</type>
							</param>
							<param>
								setEventPriority
								<name>Member Name</name>
								<type>StringT</type>
							</param>
						</params>
						<slots>
							<slot>
								<name>hold</name>
								<const>\300.000000\</const>
							</slot>
						</slots>
					</block>
				</blocks>
				<connections>
					<connection>
						<from>Sequence_1</from>
						<input>input</input>
						<to>If_1</to>
						<output>o0</output>
					</connection>
					<connection>
						<from>CompareString_1</from>
						<input>value</input>
						<to>If_1</to>
						<output>equal</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>a</input>
						<to>CompareString_1</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>a</input>
						<to>SubtractInteger_1</to>
						<output>res</output>
					</connection>
					<connection>
						<from>MacroInput_3</from>
						<input>input</input>
						<to>Sequence_1</to>
						<output>input</output>
					</connection>
					<connection>
						<from>If_1</from>
						<input>in</input>
						<to>ContextEventCall_2</to>
						<output>true</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>ContextEventCall_2</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>ContextEventCall_2</from>
						<input>in</input>
						<to>ContextEventCall_3</to>
						<output>out</output>
					</connection>
					<connection>
						<from>MacroInput_1</from>
						<input>eventName</input>
						<to>ContextEventCall_3</to>
						<output>eventName</output>
					</connection>
					<connection>
						<from>SubtractInteger_1</from>
						<input>priority</input>
						<to>ContextEventCall_3</to>
						<output>res</output>
					</connection>
				</connections>
			</macro>
		</macros>
		<curves/>
	</info>
</root>
